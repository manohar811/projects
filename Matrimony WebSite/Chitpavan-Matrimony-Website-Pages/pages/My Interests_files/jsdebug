var WebService=function() {
WebService.initializeBase(this);
this._timeout = 0;
this._userContext = null;
this._succeeded = null;
this._failed = null;
}
WebService.prototype={
IsEmailExists:function(EmailAddress,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'IsEmailExists',false,{EmailAddress:EmailAddress},succeededCallback,failedCallback,userContext); },
IsUsernameExists:function(Username,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'IsUsernameExists',false,{Username:Username},succeededCallback,failedCallback,userContext); },
GetSubCommunities:function(Id,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'GetSubCommunities',false,{Id:Id},succeededCallback,failedCallback,userContext); },
GetStatesByCountry:function(Id,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'GetStatesByCountry',false,{Id:Id},succeededCallback,failedCallback,userContext); },
LoadMetroCities:function(Id,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'LoadMetroCities',false,{Id:Id},succeededCallback,failedCallback,userContext); },
LoadSubCommunities:function(CommunityId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'LoadSubCommunities',false,{CommunityId:CommunityId},succeededCallback,failedCallback,userContext); },
RemoveDatingPhoto:function(succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'RemoveDatingPhoto',false,{},succeededCallback,failedCallback,userContext); },
DeleteSavedSearch:function(ProfileDatingSaveSearchId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteSavedSearch',false,{ProfileDatingSaveSearchId:ProfileDatingSaveSearchId},succeededCallback,failedCallback,userContext); },
RemoveFavouriteMember:function(ObjProfileId,Type,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'RemoveFavouriteMember',false,{ObjProfileId:ObjProfileId,Type:Type},succeededCallback,failedCallback,userContext); },
CancelPendingInvitation:function(InvitationId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'CancelPendingInvitation',false,{InvitationId:InvitationId},succeededCallback,failedCallback,userContext); },
SearchById:function(DatingId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SearchById',false,{DatingId:DatingId},succeededCallback,failedCallback,userContext); },
UpdateUserProfileStatus:function(ProfileId,Status,Comment,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'UpdateUserProfileStatus',false,{ProfileId:ProfileId,Status:Status,Comment:Comment},succeededCallback,failedCallback,userContext); },
SaveMembershipPackage:function(MembershipPackageId,Package,Description,ValidityInMonths,Amount,CountryId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SaveMembershipPackage',false,{MembershipPackageId:MembershipPackageId,Package:Package,Description:Description,ValidityInMonths:ValidityInMonths,Amount:Amount,CountryId:CountryId},succeededCallback,failedCallback,userContext); },
GetMembershipPackageDetails:function(MembershipPackageId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'GetMembershipPackageDetails',false,{MembershipPackageId:MembershipPackageId},succeededCallback,failedCallback,userContext); },
GetPackagesByCountry:function(CountryId,SelectId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'GetPackagesByCountry',false,{CountryId:CountryId,SelectId:SelectId},succeededCallback,failedCallback,userContext); },
SaveMembershipOffer:function(MembershipPackageId,Offer,Description,Discount,StartDate,EndDate,DiscountType,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SaveMembershipOffer',false,{MembershipPackageId:MembershipPackageId,Offer:Offer,Description:Description,Discount:Discount,StartDate:StartDate,EndDate:EndDate,DiscountType:DiscountType},succeededCallback,failedCallback,userContext); },
DeleteMembershipOffer:function(MembershipOfferId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteMembershipOffer',false,{MembershipOfferId:MembershipOfferId},succeededCallback,failedCallback,userContext); },
PublishUnPublishAlbum:function(AlbumIds,Status,OperationStatus,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'PublishUnPublishAlbum',false,{AlbumIds:AlbumIds,Status:Status,OperationStatus:OperationStatus},succeededCallback,failedCallback,userContext); },
DeletePhotos:function(PhotoIds,AlbumId,PublishStatus,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeletePhotos',false,{PhotoIds:PhotoIds,AlbumId:AlbumId,PublishStatus:PublishStatus},succeededCallback,failedCallback,userContext); },
SaveTitle:function(AlbumFileId,AlbumId,FileTitle,IsCover,IP,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SaveTitle',false,{AlbumFileId:AlbumFileId,AlbumId:AlbumId,FileTitle:FileTitle,IsCover:IsCover,IP:IP},succeededCallback,failedCallback,userContext); },
DeleteAlbumFile:function(AlbumFileId,AlbumId,IP,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteAlbumFile',false,{AlbumFileId:AlbumFileId,AlbumId:AlbumId,IP:IP},succeededCallback,failedCallback,userContext); },
SaveAlbum:function(AlbumId,AlbumName,AlbumDescription,IP,DatingPublishedProfileId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SaveAlbum',false,{AlbumId:AlbumId,AlbumName:AlbumName,AlbumDescription:AlbumDescription,IP:IP,DatingPublishedProfileId:DatingPublishedProfileId},succeededCallback,failedCallback,userContext); },
DeleteAlbum:function(AlbumId,IP,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteAlbum',false,{AlbumId:AlbumId,IP:IP},succeededCallback,failedCallback,userContext); },
DeleteDatingProfile:function(succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteDatingProfile',false,{},succeededCallback,failedCallback,userContext); },
UpdateDatingStatus:function(Status,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'UpdateDatingStatus',false,{Status:Status},succeededCallback,failedCallback,userContext); },
SendMessage:function(ProfileId,Message,ParentId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SendMessage',false,{ProfileId:ProfileId,Message:Message,ParentId:ParentId},succeededCallback,failedCallback,userContext); },
SendMessageToProfile:function(ProfileId,Message,ParentId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SendMessageToProfile',false,{ProfileId:ProfileId,Message:Message,ParentId:ParentId},succeededCallback,failedCallback,userContext); },
DeleteMessage:function(MessageID,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeleteMessage',false,{MessageID:MessageID},succeededCallback,failedCallback,userContext); },
ChangeMessageStatus:function(MessageId,Status,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'ChangeMessageStatus',false,{MessageId:MessageId,Status:Status},succeededCallback,failedCallback,userContext); },
ViewContactDetails:function(DatingPublishedProfileId,ProfileId,IsAdmin,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'ViewContactDetails',false,{DatingPublishedProfileId:DatingPublishedProfileId,ProfileId:ProfileId,IsAdmin:IsAdmin},succeededCallback,failedCallback,userContext); },
AddRemoveFavourite:function(ProfileId,ShowFavourite,AddFavourite,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'AddRemoveFavourite',false,{ProfileId:ProfileId,ShowFavourite:ShowFavourite,AddFavourite:AddFavourite},succeededCallback,failedCallback,userContext); },
HideShowDatingStatus:function(Status,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'HideShowDatingStatus',false,{Status:Status},succeededCallback,failedCallback,userContext); },
AttendEvent:function(DatingEventId,BoolRemoveAttendee,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'AttendEvent',false,{DatingEventId:DatingEventId,BoolRemoveAttendee:BoolRemoveAttendee},succeededCallback,failedCallback,userContext); },
SaveBureau:function(DatingBureauId,BureauName,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SaveBureau',false,{DatingBureauId:DatingBureauId,BureauName:BureauName},succeededCallback,failedCallback,userContext); },
LoadCitySearchResultsByState:function(q,StateId,CountryId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'LoadCitySearchResultsByState',false,{q:q,StateId:StateId,CountryId:CountryId},succeededCallback,failedCallback,userContext); },
FillAutoOccupations:function(q,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'FillAutoOccupations',false,{q:q},succeededCallback,failedCallback,userContext); },
DeletePreOrder:function(PreOrderId,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'DeletePreOrder',false,{PreOrderId:PreOrderId},succeededCallback,failedCallback,userContext); },
SendVerificationMail:function(succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SendVerificationMail',false,{},succeededCallback,failedCallback,userContext); },
SavePassword:function(OldPassword,NewPassword,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SavePassword',false,{OldPassword:OldPassword,NewPassword:NewPassword},succeededCallback,failedCallback,userContext); },
CheckMyDatingProfileStatus:function(succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'CheckMyDatingProfileStatus',false,{},succeededCallback,failedCallback,userContext); },
RefreshCaptcha:function(succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'RefreshCaptcha',false,{},succeededCallback,failedCallback,userContext); },
SendPasswordByEmail:function(EmailAddress,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'SendPasswordByEmail',false,{EmailAddress:EmailAddress},succeededCallback,failedCallback,userContext); },
ShowSecurityQuestion:function(EmailAddress,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'ShowSecurityQuestion',false,{EmailAddress:EmailAddress},succeededCallback,failedCallback,userContext); },
VerifyAnswer:function(EmailAddress,Answer,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'VerifyAnswer',false,{EmailAddress:EmailAddress,Answer:Answer},succeededCallback,failedCallback,userContext); },
ResetPassword:function(EmailAddress,Answer,NewPassword,succeededCallback, failedCallback, userContext) {
return this._invoke(WebService.get_path(), 'ResetPassword',false,{EmailAddress:EmailAddress,Answer:Answer,NewPassword:NewPassword},succeededCallback,failedCallback,userContext); }}
WebService.registerClass('WebService',Sys.Net.WebServiceProxy);
WebService._staticInstance = new WebService();
WebService.set_path = function(value) { 
var e = Function._validateParams(arguments, [{name: 'path', type: String}]); if (e) throw e; WebService._staticInstance._path = value; }
WebService.get_path = function() { return WebService._staticInstance._path; }
WebService.set_timeout = function(value) { var e = Function._validateParams(arguments, [{name: 'timeout', type: Number}]); if (e) throw e; if (value < 0) { throw Error.argumentOutOfRange('value', value, Sys.Res.invalidTimeout); }
WebService._staticInstance._timeout = value; }
WebService.get_timeout = function() { 
return WebService._staticInstance._timeout; }
WebService.set_defaultUserContext = function(value) { 
WebService._staticInstance._userContext = value; }
WebService.get_defaultUserContext = function() { 
return WebService._staticInstance._userContext; }
WebService.set_defaultSucceededCallback = function(value) { 
var e = Function._validateParams(arguments, [{name: 'defaultSucceededCallback', type: Function}]); if (e) throw e; WebService._staticInstance._succeeded = value; }
WebService.get_defaultSucceededCallback = function() { 
return WebService._staticInstance._succeeded; }
WebService.set_defaultFailedCallback = function(value) { 
var e = Function._validateParams(arguments, [{name: 'defaultFailedCallback', type: Function}]); if (e) throw e; WebService._staticInstance._failed = value; }
WebService.get_defaultFailedCallback = function() { 
return WebService._staticInstance._failed; }
WebService.set_path("/ChitpavanMatrimony/WebService.asmx");
WebService.IsEmailExists= function(EmailAddress,onSuccess,onFailed,userContext) {WebService._staticInstance.IsEmailExists(EmailAddress,onSuccess,onFailed,userContext); }
WebService.IsUsernameExists= function(Username,onSuccess,onFailed,userContext) {WebService._staticInstance.IsUsernameExists(Username,onSuccess,onFailed,userContext); }
WebService.GetSubCommunities= function(Id,onSuccess,onFailed,userContext) {WebService._staticInstance.GetSubCommunities(Id,onSuccess,onFailed,userContext); }
WebService.GetStatesByCountry= function(Id,onSuccess,onFailed,userContext) {WebService._staticInstance.GetStatesByCountry(Id,onSuccess,onFailed,userContext); }
WebService.LoadMetroCities= function(Id,onSuccess,onFailed,userContext) {WebService._staticInstance.LoadMetroCities(Id,onSuccess,onFailed,userContext); }
WebService.LoadSubCommunities= function(CommunityId,onSuccess,onFailed,userContext) {WebService._staticInstance.LoadSubCommunities(CommunityId,onSuccess,onFailed,userContext); }
WebService.RemoveDatingPhoto= function(onSuccess,onFailed,userContext) {WebService._staticInstance.RemoveDatingPhoto(onSuccess,onFailed,userContext); }
WebService.DeleteSavedSearch= function(ProfileDatingSaveSearchId,onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteSavedSearch(ProfileDatingSaveSearchId,onSuccess,onFailed,userContext); }
WebService.RemoveFavouriteMember= function(ObjProfileId,Type,onSuccess,onFailed,userContext) {WebService._staticInstance.RemoveFavouriteMember(ObjProfileId,Type,onSuccess,onFailed,userContext); }
WebService.CancelPendingInvitation= function(InvitationId,onSuccess,onFailed,userContext) {WebService._staticInstance.CancelPendingInvitation(InvitationId,onSuccess,onFailed,userContext); }
WebService.SearchById= function(DatingId,onSuccess,onFailed,userContext) {WebService._staticInstance.SearchById(DatingId,onSuccess,onFailed,userContext); }
WebService.UpdateUserProfileStatus= function(ProfileId,Status,Comment,onSuccess,onFailed,userContext) {WebService._staticInstance.UpdateUserProfileStatus(ProfileId,Status,Comment,onSuccess,onFailed,userContext); }
WebService.SaveMembershipPackage= function(MembershipPackageId,Package,Description,ValidityInMonths,Amount,CountryId,onSuccess,onFailed,userContext) {WebService._staticInstance.SaveMembershipPackage(MembershipPackageId,Package,Description,ValidityInMonths,Amount,CountryId,onSuccess,onFailed,userContext); }
WebService.GetMembershipPackageDetails= function(MembershipPackageId,onSuccess,onFailed,userContext) {WebService._staticInstance.GetMembershipPackageDetails(MembershipPackageId,onSuccess,onFailed,userContext); }
WebService.GetPackagesByCountry= function(CountryId,SelectId,onSuccess,onFailed,userContext) {WebService._staticInstance.GetPackagesByCountry(CountryId,SelectId,onSuccess,onFailed,userContext); }
WebService.SaveMembershipOffer= function(MembershipPackageId,Offer,Description,Discount,StartDate,EndDate,DiscountType,onSuccess,onFailed,userContext) {WebService._staticInstance.SaveMembershipOffer(MembershipPackageId,Offer,Description,Discount,StartDate,EndDate,DiscountType,onSuccess,onFailed,userContext); }
WebService.DeleteMembershipOffer= function(MembershipOfferId,onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteMembershipOffer(MembershipOfferId,onSuccess,onFailed,userContext); }
WebService.PublishUnPublishAlbum= function(AlbumIds,Status,OperationStatus,onSuccess,onFailed,userContext) {WebService._staticInstance.PublishUnPublishAlbum(AlbumIds,Status,OperationStatus,onSuccess,onFailed,userContext); }
WebService.DeletePhotos= function(PhotoIds,AlbumId,PublishStatus,onSuccess,onFailed,userContext) {WebService._staticInstance.DeletePhotos(PhotoIds,AlbumId,PublishStatus,onSuccess,onFailed,userContext); }
WebService.SaveTitle= function(AlbumFileId,AlbumId,FileTitle,IsCover,IP,onSuccess,onFailed,userContext) {WebService._staticInstance.SaveTitle(AlbumFileId,AlbumId,FileTitle,IsCover,IP,onSuccess,onFailed,userContext); }
WebService.DeleteAlbumFile= function(AlbumFileId,AlbumId,IP,onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteAlbumFile(AlbumFileId,AlbumId,IP,onSuccess,onFailed,userContext); }
WebService.SaveAlbum= function(AlbumId,AlbumName,AlbumDescription,IP,DatingPublishedProfileId,onSuccess,onFailed,userContext) {WebService._staticInstance.SaveAlbum(AlbumId,AlbumName,AlbumDescription,IP,DatingPublishedProfileId,onSuccess,onFailed,userContext); }
WebService.DeleteAlbum= function(AlbumId,IP,onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteAlbum(AlbumId,IP,onSuccess,onFailed,userContext); }
WebService.DeleteDatingProfile= function(onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteDatingProfile(onSuccess,onFailed,userContext); }
WebService.UpdateDatingStatus= function(Status,onSuccess,onFailed,userContext) {WebService._staticInstance.UpdateDatingStatus(Status,onSuccess,onFailed,userContext); }
WebService.SendMessage= function(ProfileId,Message,ParentId,onSuccess,onFailed,userContext) {WebService._staticInstance.SendMessage(ProfileId,Message,ParentId,onSuccess,onFailed,userContext); }
WebService.SendMessageToProfile= function(ProfileId,Message,ParentId,onSuccess,onFailed,userContext) {WebService._staticInstance.SendMessageToProfile(ProfileId,Message,ParentId,onSuccess,onFailed,userContext); }
WebService.DeleteMessage= function(MessageID,onSuccess,onFailed,userContext) {WebService._staticInstance.DeleteMessage(MessageID,onSuccess,onFailed,userContext); }
WebService.ChangeMessageStatus= function(MessageId,Status,onSuccess,onFailed,userContext) {WebService._staticInstance.ChangeMessageStatus(MessageId,Status,onSuccess,onFailed,userContext); }
WebService.ViewContactDetails= function(DatingPublishedProfileId,ProfileId,IsAdmin,onSuccess,onFailed,userContext) {WebService._staticInstance.ViewContactDetails(DatingPublishedProfileId,ProfileId,IsAdmin,onSuccess,onFailed,userContext); }
WebService.AddRemoveFavourite= function(ProfileId,ShowFavourite,AddFavourite,onSuccess,onFailed,userContext) {WebService._staticInstance.AddRemoveFavourite(ProfileId,ShowFavourite,AddFavourite,onSuccess,onFailed,userContext); }
WebService.HideShowDatingStatus= function(Status,onSuccess,onFailed,userContext) {WebService._staticInstance.HideShowDatingStatus(Status,onSuccess,onFailed,userContext); }
WebService.AttendEvent= function(DatingEventId,BoolRemoveAttendee,onSuccess,onFailed,userContext) {WebService._staticInstance.AttendEvent(DatingEventId,BoolRemoveAttendee,onSuccess,onFailed,userContext); }
WebService.SaveBureau= function(DatingBureauId,BureauName,onSuccess,onFailed,userContext) {WebService._staticInstance.SaveBureau(DatingBureauId,BureauName,onSuccess,onFailed,userContext); }
WebService.LoadCitySearchResultsByState= function(q,StateId,CountryId,onSuccess,onFailed,userContext) {WebService._staticInstance.LoadCitySearchResultsByState(q,StateId,CountryId,onSuccess,onFailed,userContext); }
WebService.FillAutoOccupations= function(q,onSuccess,onFailed,userContext) {WebService._staticInstance.FillAutoOccupations(q,onSuccess,onFailed,userContext); }
WebService.DeletePreOrder= function(PreOrderId,onSuccess,onFailed,userContext) {WebService._staticInstance.DeletePreOrder(PreOrderId,onSuccess,onFailed,userContext); }
WebService.SendVerificationMail= function(onSuccess,onFailed,userContext) {WebService._staticInstance.SendVerificationMail(onSuccess,onFailed,userContext); }
WebService.SavePassword= function(OldPassword,NewPassword,onSuccess,onFailed,userContext) {WebService._staticInstance.SavePassword(OldPassword,NewPassword,onSuccess,onFailed,userContext); }
WebService.CheckMyDatingProfileStatus= function(onSuccess,onFailed,userContext) {WebService._staticInstance.CheckMyDatingProfileStatus(onSuccess,onFailed,userContext); }
WebService.RefreshCaptcha= function(onSuccess,onFailed,userContext) {WebService._staticInstance.RefreshCaptcha(onSuccess,onFailed,userContext); }
WebService.SendPasswordByEmail= function(EmailAddress,onSuccess,onFailed,userContext) {WebService._staticInstance.SendPasswordByEmail(EmailAddress,onSuccess,onFailed,userContext); }
WebService.ShowSecurityQuestion= function(EmailAddress,onSuccess,onFailed,userContext) {WebService._staticInstance.ShowSecurityQuestion(EmailAddress,onSuccess,onFailed,userContext); }
WebService.VerifyAnswer= function(EmailAddress,Answer,onSuccess,onFailed,userContext) {WebService._staticInstance.VerifyAnswer(EmailAddress,Answer,onSuccess,onFailed,userContext); }
WebService.ResetPassword= function(EmailAddress,Answer,NewPassword,onSuccess,onFailed,userContext) {WebService._staticInstance.ResetPassword(EmailAddress,Answer,NewPassword,onSuccess,onFailed,userContext); }
